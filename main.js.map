{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"cnt\\\">\\n  <div class=\\\"cnt__left\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"volume\\\" matSortDisableClear matSortDirection=\\\"asc\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Название валюты </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"volume\\\">\\n        <th mat-header-cell *matHeaderCellDef> Цена </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.volume}} </td>\\n      </ng-container>\\n\\n      Symbol Column\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef> Количество </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price.amount | currency: \\\" \\\"}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n  </div>\\n  <div class=\\\"cnt__right\\\">\\n    <button mat-raised-button (click)=\\\"getData();\\\">Обновить данные</button>\\n    <div *ngIf=\\\"loading\\\" class=\\\"spinner\\\">\\n      <mat-spinner></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.cnt {\\n  display: table;\\n  width: 100%; }\\n\\n.cnt__left, .cnt__right {\\n    display: table-cell; }\\n\\n.cnt__right {\\n    text-align: center;\\n    width: 10%; }\\n\\n.cnt .spinner {\\n    margin-top: 50px;\\n    margin-left: 30%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFzQktC40YLQsNC70LjQudCQ0LvQtdC60YHQsNC90LTRgNC+0LLQuNGHXFxEZXNrdG9wXFx0ZXN0LXBhLXJlc3VsdGFudFxccmVzdWx0YW50L3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxlQUFjO0VBQ2QsWUFBVyxFQWdCWjs7QUFkQztJQUNFLG9CQUFtQixFQUNwQjs7QUFFRDtJQUNFLG1CQUFrQjtJQUNsQixXQUFVLEVBQ1g7O0FBWEg7SUFjSSxpQkFBZ0I7SUFDaEIsaUJBQWdCLEVBQ2pCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY250IHtcclxuICBkaXNwbGF5OiB0YWJsZTtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbiAgJl9fbGVmdCwgICZfX3JpZ2h0IHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgfVxyXG5cclxuICAmX19yaWdodCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAlO1xyXG4gIH1cclxuXHJcbiAgLnNwaW5uZXIge1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAzMCU7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from './app.service';\nimport { Currency } from './currency';\nimport { interval } from 'rxjs';\nimport { takeWhile, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  public dataSource: Array<Currency> = [];\n  public displayedColumns: string[] = ['name', 'volume', 'amount'];\n  public loading: boolean = false;\n\n  constructor (\n    private _service: AppService\n  ){}\n\n  ngOnInit() {\n    this.getData();\n\n    setInterval(() => {\n      this.getData();\n    }, 15000);\n\n  }\n\n  public getData() {\n    this.loading = true;\n    this._service.getСurrency().subscribe(\n      data => {\n      console.log(data);\n      this.dataSource = data.stock;\n    },\n      () => {},\n      () => {\n        this.loading = false;\n      }\n    );\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatGridListModule, MatTableModule, MatSortModule, MatSidenavModule, MatButtonModule, MatProgressSpinnerModule } from '@angular/material';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppService } from './app.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatTableModule,\n    MatSortModule,\n    MatSidenavModule,\n    AppRoutingModule\n  ],\n  providers: [\n    AppService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  private url = 'http://phisix-api3.appspot.com/stocks.json';\n\n  constructor(private http: HttpClient) { }\n\n  getСurrency() {\n    const headers = new HttpHeaders();\n    headers.append('Access-Control-Allow-Headers', 'Content-Type');\n    headers.append('Access-Control-Allow-Methods', 'GET');\n    headers.append('Access-Control-Allow-Origin', '*');\n    return this.http.get<any>(this.url, { headers : headers });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}